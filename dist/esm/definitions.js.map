{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface NordicDFUPlugin {\n  startDFU(options: StartDFUOptions): Promise<void>;\n\n  abortDFU(): Promise<void>;\n\n  addListener(\n    eventName: 'dfuStateDidChange',\n    listenerFunc: (params: { state: string; deviceAddress?: string }) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  addListener(\n    eventName: 'dfuProgressDidChange',\n    listenerFunc: (params: {\n      percent: number;\n      speed: number;\n      avgSpeed: number;\n      currentPart: number;\n      partsTotal: number;\n      deviceAddress?: string;\n    }) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  removeAllListeners(): Promise<void>;\n}\n\nexport interface StartDFUOptions {\n  /**\n   * Supported Platforms: Android \\ iOS\n   */\n  filePath: string;\n\n  /**\n   * Supported Platforms: Android \\ iOS\n   */\n  deviceAddress: string;\n\n  /**\n   * Supported Platforms: Android \\ iOS\n   */\n  forceDfu?: boolean;\n\n  /**\n   * Supported Platforms: Android \\ iOS\n   */\n  enableUnsafeExperimentalButtonlessServiceInSecureDfu?: boolean;\n\n  /**\n   * Supported Platforms: Android\n   */\n  forceScanningForNewAddressInLegacyDfu?: boolean;\n\n  /**\n   * Supported Platforms: Android \\ iOS\n   */\n  disableResume?: boolean;\n  /**\n   * Supported Platforms: Android\n   */\n  foreground?: boolean;\n  /**\n   * Supported Platforms: Android\n   */\n  disableNotification?: boolean;\n  /**\n   * Supported Platforms: Android\n   */\n  dataObjectPreparationDelay?: number;\n}\n"]}